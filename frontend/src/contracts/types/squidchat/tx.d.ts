// Generated by dedot cli

import type { GenericSubstrateApi } from "dedot/types";
import type { AccountId32Like } from "dedot/codecs";
import type {
  GenericContractTx,
  GenericContractTxCall,
  ContractTxOptions,
  ContractSubmittableExtrinsic,
} from "dedot/contracts";

export interface ContractTx<ChainApi extends GenericSubstrateApi>
  extends GenericContractTx<ChainApi> {
  /**
   *
   * @param {string} name
   * @param {string | undefined} imgUrl
   * @param {ContractTxOptions} options
   *
   * @selector 0x5c7ff4a1
   **/
  newChannel: GenericContractTxCall<
    ChainApi,
    (
      name: string,
      imgUrl: string | undefined,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {string} name
   * @param {string | undefined} imgUrl
   * @param {ContractTxOptions} options
   *
   * @selector 0x4c28f0a6
   **/
  updateChannel: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      name: string,
      imgUrl: string | undefined,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {ContractTxOptions} options
   *
   * @selector 0xdab6d4bd
   **/
  cancelRequest: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {ContractTxOptions} options
   *
   * @selector 0x67f71055
   **/
  sendRequest: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {Array<[AccountId32Like, boolean]>} approvals
   * @param {ContractTxOptions} options
   *
   * @selector 0x463a3d58
   **/
  approveRequest: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      approvals: Array<[AccountId32Like, boolean]>,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {ContractTxOptions} options
   *
   * @selector 0x5f3dc9ba
   **/
  leaveChannel: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {AccountId32Like} who
   * @param {number} channelId
   * @param {ContractTxOptions} options
   *
   * @selector 0xa95d714b
   **/
  kickMember: GenericContractTxCall<
    ChainApi,
    (
      who: AccountId32Like,
      channelId: number,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {number} from
   * @param {number} perPage
   * @param {ContractTxOptions} options
   *
   * @selector 0x24f7deae
   **/
  listMessages: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      from: number,
      perPage: number,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {string} content
   * @param {ContractTxOptions} options
   *
   * @selector 0xafdc403f
   **/
  sendMessage: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      content: string,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;

  /**
   *
   * @param {number} channelId
   * @param {number} messageId
   * @param {ContractTxOptions} options
   *
   * @selector 0xc78e4564
   **/
  removeMessage: GenericContractTxCall<
    ChainApi,
    (
      channelId: number,
      messageId: number,
      options: ContractTxOptions,
    ) => ContractSubmittableExtrinsic<ChainApi>
  >;
}
